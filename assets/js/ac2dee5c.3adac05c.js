/*! For license information please see ac2dee5c.3adac05c.js.LICENSE.txt */
"use strict";(self.webpackChunkreact_native_website=self.webpackChunkreact_native_website||[]).push([[6053],{22893:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>s,default:()=>f,frontMatter:()=>i,metadata:()=>c,toc:()=>l});var o=t(24246),r=t(71670);const i={id:"metro",title:"Metro"},s=void 0,c={id:"metro",title:"Metro",description:"React Native uses Metro to build your JavaScript code and assets.",source:"@site/versioned_docs/version-0.72/metro.md",sourceDirName:".",slug:"/metro",permalink:"/docs/0.72/metro",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/react-native-website/blob/main/website/../docs/metro.md",tags:[],version:"0.72",lastUpdatedAt:1700850201,formattedLastUpdatedAt:"Nov 24, 2023",frontMatter:{id:"metro",title:"Metro"},sidebar:"docs",previous:{title:"Fast Refresh",permalink:"/docs/0.72/fast-refresh"},next:{title:"Symbolicating a stack trace",permalink:"/docs/0.72/symbolication"}},a={},l=[{value:"Configuring Metro",id:"configuring-metro",level:2},{value:"Advanced: Using a config function",id:"advanced-using-a-config-function",level:3},{value:"Learn more about Metro",id:"learn-more-about-metro",level:2}];function d(e){const n=Object.assign({p:"p",a:"a",h2:"h2",code:"code",ul:"ul",li:"li",strong:"strong",admonition:"admonition",pre:"pre",h3:"h3"},(0,r.ah)(),e.components);return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(n.p,{children:["React Native uses ",(0,o.jsx)(n.a,{href:"https://metrobundler.dev/",children:"Metro"})," to build your JavaScript code and assets."]}),"\n",(0,o.jsx)(n.h2,{id:"configuring-metro",children:"Configuring Metro"}),"\n",(0,o.jsxs)(n.p,{children:["Configuration options for Metro can be customized in your project's ",(0,o.jsx)(n.code,{children:"metro.config.js"})," file. This can export either:"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"An object (recommended)"})," that will be merged on top of Metro's internal config defaults."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"#advanced-using-a-config-function",children:(0,o.jsx)(n.strong,{children:"A function"})})," that will be called with Metro's internal config defaults and should return a final config object."]}),"\n"]}),"\n",(0,o.jsx)(n.admonition,{type:"tip",children:(0,o.jsxs)(n.p,{children:["Please see ",(0,o.jsx)(n.a,{href:"https://metrobundler.dev/docs/configuration",children:(0,o.jsx)(n.strong,{children:"Configuring Metro"})})," on the Metro website for documentation on all available config options."]})}),"\n",(0,o.jsxs)(n.p,{children:["In React Native, your Metro config should extend either ",(0,o.jsx)(n.a,{href:"https://www.npmjs.com/package/@react-native/metro-config",children:(0,o.jsx)(n.code,{children:"@react-native/metro-config"})})," or ",(0,o.jsx)(n.a,{href:"https://www.npmjs.com/package/@expo/metro-config",children:(0,o.jsx)(n.code,{children:"@expo/metro-config"})}),". These packages contain essential defaults necessary to build and run React Native apps."]}),"\n",(0,o.jsxs)(n.p,{children:["Below is the default ",(0,o.jsx)(n.code,{children:"metro.config.js"})," file in a React Native template project:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:"const {getDefaultConfig, mergeConfig} = require('@react-native/metro-config');\n\n/**\n * Metro configuration\n * https://metrobundler.dev/docs/configuration\n *\n * @type {import('metro-config').MetroConfig}\n */\nconst config = {};\n\nmodule.exports = mergeConfig(getDefaultConfig(__dirname), config);\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Metro options you wish to customize can be done so within the ",(0,o.jsx)(n.code,{children:"config"})," object."]}),"\n",(0,o.jsx)(n.h3,{id:"advanced-using-a-config-function",children:"Advanced: Using a config function"}),"\n",(0,o.jsxs)(n.p,{children:["Exporting a config function is an opt-in to managing the final config yourself \u2014 ",(0,o.jsx)(n.strong,{children:"Metro will not apply any internal defaults"}),". This pattern can be useful when needing to read the base default config object from Metro or to set options dynamically."]}),"\n",(0,o.jsx)(n.admonition,{type:"info",children:(0,o.jsxs)(n.p,{children:[(0,o.jsxs)(n.strong,{children:["From ",(0,o.jsx)(n.code,{children:"@react-native/metro-config"})," 0.72.1"]}),", it is no longer necessary to use a config function to access the complete default config. See the ",(0,o.jsx)(n.strong,{children:"Tip"})," section below."]})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:"const {getDefaultConfig, mergeConfig} = require('@react-native/metro-config');\n\nmodule.exports = function (baseConfig) {\n  const defaultConfig = mergeConfig(baseConfig, getDefaultConfig(__dirname));\n  const {resolver: {assetExts, sourceExts}} = defaultConfig;\n\n  return mergeConfig(\n    defaultConfig,\n    {\n      resolver: {\n        assetExts: assetExts.filter(ext => ext !== 'svg'),\n        sourceExts: [...sourceExts, 'svg'],\n      },\n    },\n  );\n};\n"})}),"\n",(0,o.jsxs)(n.admonition,{type:"tip",children:[(0,o.jsxs)(n.p,{children:["Using a config function is for advanced use cases. A simpler method than the above, e.g. for customising ",(0,o.jsx)(n.code,{children:"sourceExts"}),", would be to read these defaults from ",(0,o.jsx)(n.code,{children:"@react-native/metro-config"}),"."]}),(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Alternative"})}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:"const defaultConfig = getDefaultConfig(__dirname);\n\nconst config = {\n  resolver: {\n    sourceExts: [...defaultConfig.resolver.sourceExts, 'svg'],\n  },\n};\n\nmodule.exports = mergeConfig(defaultConfig, config);\n"})}),(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"However!"}),", we recommend copying and editing when overriding these config values \u2014 placing the source of truth in your config file."]}),(0,o.jsxs)(n.p,{children:["\u2705 ",(0,o.jsx)(n.strong,{children:"Recommended"})]}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:"const config = {\n  resolver: {\n    sourceExts: ['js', 'ts', 'tsx', 'svg'],\n  },\n};\n"})})]}),"\n",(0,o.jsx)(n.h2,{id:"learn-more-about-metro",children:"Learn more about Metro"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"https://metrobundler.dev/",children:"Metro website"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"https://www.youtube.com/watch?v=c9D4pg0y9cI",children:'Video: "Metro & React Native DevX" talk at App.js 2023'})}),"\n"]})]})}const f=function(e={}){const{wrapper:n}=Object.assign({},(0,r.ah)(),e.components);return n?(0,o.jsx)(n,Object.assign({},e,{children:(0,o.jsx)(d,e)})):d(e)}},71426:(e,n,t)=>{var o=t(27378),r=Symbol.for("react.element"),i=Symbol.for("react.fragment"),s=Object.prototype.hasOwnProperty,c=o.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,a={key:!0,ref:!0,__self:!0,__source:!0};function l(e,n,t){var o,i={},l=null,d=null;for(o in void 0!==t&&(l=""+t),void 0!==n.key&&(l=""+n.key),void 0!==n.ref&&(d=n.ref),n)s.call(n,o)&&!a.hasOwnProperty(o)&&(i[o]=n[o]);if(e&&e.defaultProps)for(o in n=e.defaultProps)void 0===i[o]&&(i[o]=n[o]);return{$$typeof:r,type:e,key:l,ref:d,props:i,_owner:c.current}}n.Fragment=i,n.jsx=l,n.jsxs=l},24246:(e,n,t)=>{e.exports=t(71426)},71670:(e,n,t)=>{t.d(n,{Zo:()=>c,ah:()=>i});var o=t(27378);const r=o.createContext({});function i(e){const n=o.useContext(r);return o.useMemo((()=>"function"==typeof e?e(n):{...n,...e}),[n,e])}const s={};function c({components:e,children:n,disableParentContext:t}){let c;return c=t?"function"==typeof e?e({}):e||s:i(e),o.createElement(r.Provider,{value:c},n)}}}]);