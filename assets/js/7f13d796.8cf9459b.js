/*! For license information please see 7f13d796.8cf9459b.js.LICENSE.txt */
"use strict";(self.webpackChunkreact_native_website=self.webpackChunkreact_native_website||[]).push([[97463],{59410:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>r,metadata:()=>s,toc:()=>l});var o=n(24246),i=n(71670);const r={title:"Meet Doctor, a new React Native command",author:"Lucas Bento",authorTitle:"React Native Community",authorURL:"https://twitter.com/lbentosilva",authorImageURL:"https://avatars3.githubusercontent.com/u/6207220?s=460&v=4",authorTwitter:"lbentosilva",tags:["announcement"]},a=void 0,s={permalink:"/blog/2019/11/18/react-native-doctor",source:"@site/blog/2019-11-18-react-native-doctor.md",title:"Meet Doctor, a new React Native command",description:"After over 20 pull requests from 6 contributors in the React Native Community, we're excited to launch react-native doctor, a new command to help you out with getting started, troubleshooting and automatically fixing errors with your development environment. The doctor command is heavily inspired by Expo and Homebrew's own doctor command with a pinch of UI inspired by Jest.",date:"2019-11-18T00:00:00.000Z",formattedDate:"November 18, 2019",tags:[{label:"announcement",permalink:"/blog/tags/announcement"}],readingTime:1.75,hasTruncateMarker:!0,authors:[{name:"Lucas Bento",title:"React Native Community",url:"https://twitter.com/lbentosilva",imageURL:"https://avatars3.githubusercontent.com/u/6207220?s=460&v=4"}],frontMatter:{title:"Meet Doctor, a new React Native command",author:"Lucas Bento",authorTitle:"React Native Community",authorURL:"https://twitter.com/lbentosilva",authorImageURL:"https://avatars3.githubusercontent.com/u/6207220?s=460&v=4",authorTwitter:"lbentosilva",tags:["announcement"]},unlisted:!1,prevItem:{title:"Announcing React Native 0.62 with Flipper",permalink:"/blog/2020/03/26/version-0.62"},nextItem:{title:"Announcing React Native 0.61 with Fast Refresh",permalink:"/blog/2019/09/18/version-0.61"}},c={authorsImageUrls:[void 0]},l=[{value:"How it works",id:"how-it-works",level:2},{value:"Try it now",id:"try-it-now",level:2},{value:"What checks are currently supported",id:"what-checks-are-currently-supported",level:2},{value:"Thanks",id:"thanks",level:2}];function h(e){const t=Object.assign({p:"p",code:"code",a:"a",h2:"h2",pre:"pre",ul:"ul",li:"li"},(0,i.ah)(),e.components);return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(t.p,{children:["After over 20 pull requests from 6 contributors in the React Native Community, we're excited to launch ",(0,o.jsx)(t.code,{children:"react-native doctor"}),", a new command to help you out with getting started, troubleshooting and automatically fixing errors with your development environment. The ",(0,o.jsx)(t.code,{children:"doctor"})," command is heavily inspired by ",(0,o.jsx)(t.a,{href:"https://expo.io/",children:"Expo"})," and ",(0,o.jsx)(t.a,{href:"https://brew.sh/",children:"Homebrew"}),"'s own doctor command with a pinch of UI inspired by ",(0,o.jsx)(t.a,{href:"https://jestjs.io/",children:"Jest"}),"."]}),"\n",(0,o.jsx)(t.p,{children:"Here it is in action:"}),"\n",(0,o.jsx)("p",{style:{textAlign:"center"},children:(0,o.jsx)("video",{width:700,controls:"controls",autoPlay:!0,style:{borderRadius:5},children:(0,o.jsx)("source",{type:"video/mp4",src:"/img/homepage/DoctorCommand.mp4"})})}),"\n",(0,o.jsx)(t.h2,{id:"how-it-works",children:"How it works"}),"\n",(0,o.jsxs)(t.p,{children:["The ",(0,o.jsx)(t.code,{children:"doctor"})," command currently supports most of the software and libraries that React Native relies on, such as CocoaPods, Xcode and Android SDK. With ",(0,o.jsx)(t.code,{children:"doctor"})," we'll find issues with your development environment and give you the option to automatically fix them. If ",(0,o.jsx)(t.code,{children:"doctor"})," is not able to fix an issue, it will display a message and a helpful link explaining how to fix it manually as the following:"]}),"\n",(0,o.jsx)("p",{style:{textAlign:"center"},children:(0,o.jsx)("img",{width:700,src:"/img/DoctorManualInstallationMessage.png",alt:"Doctor command with a link to help on Android SDK's installation",title:"Doctor command with a link to help on Android SDK's installation"})}),"\n",(0,o.jsx)(t.h2,{id:"try-it-now",children:"Try it now"}),"\n",(0,o.jsxs)(t.p,{children:["The ",(0,o.jsx)(t.code,{children:"doctor"})," command is available as a part of React Native 0.62. However, you can try it without upgrading yet:"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-sh",children:"npx @react-native-community/cli doctor\n"})}),"\n",(0,o.jsx)(t.h2,{id:"what-checks-are-currently-supported",children:"What checks are currently supported"}),"\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.code,{children:"doctor"})," currently supports the following checks:"]}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsx)(t.li,{children:"Node.js (>= 8.3)"}),"\n",(0,o.jsx)(t.li,{children:"yarn (>= 1.10)"}),"\n",(0,o.jsx)(t.li,{children:"npm (>= 4)"}),"\n",(0,o.jsx)(t.li,{children:"Watchman (>= 4), used for watching changes in the filesystem when in development mode."}),"\n"]}),"\n",(0,o.jsx)(t.p,{children:"Specific to the Android environment:"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsx)(t.li,{children:"Android SDK (>= 26), the software runtime for Android."}),"\n",(0,o.jsx)(t.li,{children:"Android NDK (>= 19), the native development toolkit for Android."}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.code,{children:"ANDROID_HOME"}),", environment variable required by the Android SDK setup."]}),"\n"]}),"\n",(0,o.jsx)(t.p,{children:"And to the iOS environment:"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsx)(t.li,{children:"Xcode (>= 10), IDE for developing, building and shipping iOS applications."}),"\n",(0,o.jsx)(t.li,{children:"CocoaPods, library dependency management tool for iOS applications."}),"\n",(0,o.jsx)(t.li,{children:"ios-deploy (optional), library used internally by the CLI to install applications on a physical iOS device."}),"\n"]}),"\n",(0,o.jsx)(t.h2,{id:"thanks",children:"Thanks"}),"\n",(0,o.jsxs)(t.p,{children:["Huge thanks for the React Native Community for working on this, in particular ",(0,o.jsx)(t.a,{href:"https://github.com/thymikee",children:"@thymikee"}),", ",(0,o.jsx)(t.a,{href:"https://github.com/thib92",children:"@thib92"}),", ",(0,o.jsx)(t.a,{href:"https://github.com/jmeistrich",children:"@jmeistrich"}),", ",(0,o.jsx)(t.a,{href:"https://github.com/tido64",children:"@tido64"})," and ",(0,o.jsx)(t.a,{href:"https://github.com/rickhanlonii",children:"@rickhanlonii"}),"."]})]})}const d=function(e={}){const{wrapper:t}=Object.assign({},(0,i.ah)(),e.components);return t?(0,o.jsx)(t,Object.assign({},e,{children:(0,o.jsx)(h,e)})):h(e)}},71426:(e,t,n)=>{var o=n(27378),i=Symbol.for("react.element"),r=Symbol.for("react.fragment"),a=Object.prototype.hasOwnProperty,s=o.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,c={key:!0,ref:!0,__self:!0,__source:!0};function l(e,t,n){var o,r={},l=null,h=null;for(o in void 0!==n&&(l=""+n),void 0!==t.key&&(l=""+t.key),void 0!==t.ref&&(h=t.ref),t)a.call(t,o)&&!c.hasOwnProperty(o)&&(r[o]=t[o]);if(e&&e.defaultProps)for(o in t=e.defaultProps)void 0===r[o]&&(r[o]=t[o]);return{$$typeof:i,type:e,key:l,ref:h,props:r,_owner:s.current}}t.Fragment=r,t.jsx=l,t.jsxs=l},24246:(e,t,n)=>{e.exports=n(71426)},71670:(e,t,n)=>{n.d(t,{Zo:()=>s,ah:()=>r});var o=n(27378);const i=o.createContext({});function r(e){const t=o.useContext(i);return o.useMemo((()=>"function"==typeof e?e(t):{...t,...e}),[t,e])}const a={};function s({components:e,children:t,disableParentContext:n}){let s;return s=n?"function"==typeof e?e({}):e||a:r(e),o.createElement(i.Provider,{value:s},t)}}}]);