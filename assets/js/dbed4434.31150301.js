/*! For license information please see dbed4434.31150301.js.LICENSE.txt */
"use strict";(self.webpackChunkreact_native_website=self.webpackChunkreact_native_website||[]).push([[50349],{92542:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>d,frontMatter:()=>s,metadata:()=>o,toc:()=>l});var a=i(24246),n=i(71670);const s={title:"React Native Accessibility - GAAD 2022 Update",author:"Alex Tait",authorTitle:"React Native Accessibility Community Manager",authorURL:"https://twitter.com/AT_Fresh_Dev",authorImageURL:"https://github.com/alextait1.png",authorTwitter:"AT_Fresh_Dev",tags:["announcement"],date:new Date("2022-05-19T00:00:00.000Z")},r=void 0,o={permalink:"/blog/2022/05/19/GAAD-2022-update",source:"@site/blog/2022-05-19-GAAD-2022-update.md",title:"React Native Accessibility - GAAD 2022 Update",description:"May 19th, 2022 marks the 11th annual celebration of Global Accessibility Awareness Day and we wanted to update everyone on the accessibility progress we\u2019ve made on the React Native Framework. Meta (formerly Facebook) was the first organization to take the GAAD pledge in 2020, committing to making the React Native framework accessible.",date:"2022-05-19T00:00:00.000Z",formattedDate:"May 19, 2022",tags:[{label:"announcement",permalink:"/blog/tags/announcement"}],readingTime:2.125,hasTruncateMarker:!0,authors:[{name:"Alex Tait",title:"React Native Accessibility Community Manager",url:"https://twitter.com/AT_Fresh_Dev",imageURL:"https://github.com/alextait1.png"}],frontMatter:{title:"React Native Accessibility - GAAD 2022 Update",author:"Alex Tait",authorTitle:"React Native Accessibility Community Manager",authorURL:"https://twitter.com/AT_Fresh_Dev",authorImageURL:"https://github.com/alextait1.png",authorTwitter:"AT_Fresh_Dev",tags:["announcement"],date:"2022-05-19T00:00:00.000Z"},unlisted:!1,prevItem:{title:"Helping migrate React Native libraries to the New Architecture",permalink:"/blog/2022/06/16/resources-migrating-your-react-native-library-to-the-new-architecture"},nextItem:{title:"Announcing React Native 0.68",permalink:"/blog/2022/03/30/version-068"}},c={authorsImageUrls:[void 0]},l=[{value:"Fixes that have already landed in 2022",id:"fixes-that-have-already-landed-in-2022",level:2},{value:"Fixes currently in progress",id:"fixes-currently-in-progress",level:2},{value:"Contributor highlight",id:"contributor-highlight",level:2},{value:"What\u2019s next in 2022",id:"whats-next-in-2022",level:2}];function h(e){const t=Object.assign({p:"p",a:"a",blockquote:"blockquote",em:"em",h2:"h2",ul:"ul",li:"li"},(0,n.ah)(),e.components);return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(t.p,{children:["May 19th, 2022 marks the 11th annual celebration of Global Accessibility Awareness Day and we wanted to update everyone on the accessibility progress we\u2019ve made on the React Native Framework. Meta (formerly Facebook) was the ",(0,a.jsx)(t.a,{href:"/blog/2021/03/08/GAAD-React-Native-Accessibility",children:"first organization to take the GAAD pledge in 2020"}),", committing to making the React Native framework accessible."]}),"\n",(0,a.jsxs)(t.blockquote,{children:["\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.em,{children:"\u201cWe hope this pledge makes it easier for developers using React Native to create fully accessible mobile apps and inspires other organizations to make similar commitments to a more accessible future.\u201d"})}),"\n",(0,a.jsxs)(t.p,{children:["\u2014 ",(0,a.jsx)(t.a,{href:"https://gaad.foundation/gaadpledge/",children:"Mike Shebanek, head of accessibility Meta, 2020"})]}),"\n"]}),"\n",(0,a.jsx)(t.p,{children:"The process initially began with a thorough review and gap analysis of the framework focused on React Native utilized the iOS and Android APIs to support accessibility features. Dozens of issues have since been fixed or closed out, making good on the pledge to make React Native accessible and advancing the accessibility of the framework ever forward."}),"\n",(0,a.jsxs)(t.p,{children:["We didn\u2019t stop there, and in early 2022, we reviewed and prioritized the remaining issues from this gap analysis on the ",(0,a.jsx)(t.a,{href:"https://github.com/facebook/react-native/projects/15",children:"Improved React Native Accessibility Board"})," based on their impact on developers and end users."]}),"\n",(0,a.jsx)(t.h2,{id:"fixes-that-have-already-landed-in-2022",children:"Fixes that have already landed in 2022"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsx)(t.li,{children:(0,a.jsx)(t.a,{href:"https://github.com/facebook/react-native/issues/30840",children:"Android: Disabled state not announced/disabled functionality not applied for some components"})}),"\n",(0,a.jsx)(t.li,{children:(0,a.jsx)(t.a,{href:"https://github.com/facebook/react-native/issues/30977",children:"Android: Position in collection not supported by some components"})}),"\n",(0,a.jsx)(t.li,{children:(0,a.jsx)(t.a,{href:"https://github.com/facebook/react-native/pull/31757",children:"Android: Make links independently focusable by Talkback"})}),"\n"]}),"\n",(0,a.jsx)(t.h2,{id:"fixes-currently-in-progress",children:"Fixes currently in progress"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsx)(t.li,{children:(0,a.jsx)(t.a,{href:"https://github.com/facebook/react-native/issues/30848",children:"iOS/Android: Text input error announcement"})}),"\n",(0,a.jsx)(t.li,{children:(0,a.jsx)(t.a,{href:"https://github.com/facebook/react-native/issues/30859",children:"Android: Form field error state announcement"})}),"\n",(0,a.jsx)(t.li,{children:(0,a.jsx)(t.a,{href:"https://github.com/facebook/react-native/issues/31042",children:"Android: Role description is announced before the components text, rather than after"})}),"\n"]}),"\n",(0,a.jsx)(t.h2,{id:"contributor-highlight",children:"Contributor highlight"}),"\n",(0,a.jsxs)(t.p,{children:["We want to recognize and send a tremendous thank you to ",(0,a.jsx)(t.a,{href:"https://github.com/fabriziobertoglio1987",children:"Fabrizo Bertoglio"})," who has contributed several high-quality accessibility fixes to React Native in 2021 and 2022."]}),"\n",(0,a.jsx)(t.p,{children:"Fabrizio has made it a personal goal to enable users through high quality solutions. By learning how to use TalkBack and VoiceOver himself, he has discovered how difficult it can be for screen reader users to experience everyday applications. He wants to build software that removes friction from these experiences and please disabled users."}),"\n",(0,a.jsx)(t.p,{children:"His pull requests have been very high quality, well documented, and include thorough test cases. Well done Fabrizio! The React Native Accessibility community thanks you for your many outstanding contributions."}),"\n",(0,a.jsx)(t.h2,{id:"whats-next-in-2022",children:"What\u2019s next in 2022"}),"\n",(0,a.jsxs)(t.p,{children:["Our goal is to fix as many of the remaining accessibility issues as possible in 2022. We will also be reviewing the backlog of ",(0,a.jsx)(t.a,{href:"https://github.com/facebook/react-native/issues",children:"React Native community reported issues"})," to look for any new accessibility-related requests."]})]})}const d=function(e={}){const{wrapper:t}=Object.assign({},(0,n.ah)(),e.components);return t?(0,a.jsx)(t,Object.assign({},e,{children:(0,a.jsx)(h,e)})):h(e)}},71426:(e,t,i)=>{var a=i(27378),n=Symbol.for("react.element"),s=Symbol.for("react.fragment"),r=Object.prototype.hasOwnProperty,o=a.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,c={key:!0,ref:!0,__self:!0,__source:!0};function l(e,t,i){var a,s={},l=null,h=null;for(a in void 0!==i&&(l=""+i),void 0!==t.key&&(l=""+t.key),void 0!==t.ref&&(h=t.ref),t)r.call(t,a)&&!c.hasOwnProperty(a)&&(s[a]=t[a]);if(e&&e.defaultProps)for(a in t=e.defaultProps)void 0===s[a]&&(s[a]=t[a]);return{$$typeof:n,type:e,key:l,ref:h,props:s,_owner:o.current}}t.Fragment=s,t.jsx=l,t.jsxs=l},24246:(e,t,i)=>{e.exports=i(71426)},71670:(e,t,i)=>{i.d(t,{Zo:()=>o,ah:()=>s});var a=i(27378);const n=a.createContext({});function s(e){const t=a.useContext(n);return a.useMemo((()=>"function"==typeof e?e(t):{...t,...e}),[t,e])}const r={};function o({components:e,children:t,disableParentContext:i}){let o;return o=i?"function"==typeof e?e({}):e||r:s(e),a.createElement(n.Provider,{value:o},t)}}}]);