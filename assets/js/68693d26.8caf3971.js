/*! For license information please see 68693d26.8caf3971.js.LICENSE.txt */
"use strict";(self.webpackChunkreact_native_website=self.webpackChunkreact_native_website||[]).push([[39734],{51489:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>h,frontMatter:()=>r,metadata:()=>o,toc:()=>p});var a=i(24246),n=i(71670);const r={title:"First-class Support for TypeScript",authors:["lunaleaps","NickGerleman"],tags:["typescript","engineering"],date:new Date("2023-01-03T00:00:00.000Z")},s="First-class Support for TypeScript",o={permalink:"/blog/2023/01/03/typescript-first",source:"@site/blog/2023-01-03-typescript-first.md",title:"First-class Support for TypeScript",description:"With the release of 0.71, React Native is investing in the TypeScript experience with the following changes:",date:"2023-01-03T00:00:00.000Z",formattedDate:"January 3, 2023",tags:[{label:"typescript",permalink:"/blog/tags/typescript"},{label:"engineering",permalink:"/blog/tags/engineering"}],readingTime:4.895,hasTruncateMarker:!0,authors:[{name:"Luna Wei",title:"Software Engineer at Meta",url:"https://twitter.com/lunaleaps",imageURL:"https://github.com/lunaleaps.png",key:"lunaleaps"},{name:"Nick Gerleman",title:"Software Engineer at Meta",url:"https://github.com/NickGerleman",imageURL:"https://github.com/NickGerleman.png",key:"NickGerleman"}],frontMatter:{title:"First-class Support for TypeScript",authors:["lunaleaps","NickGerleman"],tags:["typescript","engineering"],date:"2023-01-03T00:00:00.000Z"},unlisted:!1,prevItem:{title:"React Native 0.71: TypeScript by Default, Flexbox Gap, and more...",permalink:"/blog/2023/01/12/version-071"},nextItem:{title:"Pointer Events in React Native",permalink:"/blog/2022/12/13/pointer-events-in-react-native"}},c={authorsImageUrls:[void 0,void 0]},p=[{value:"New App Template is TypeScript By Default",id:"new-app-template-is-typescript-by-default",level:2},{value:"Declarations Shipped with React Native",id:"declarations-shipped-with-react-native",level:2},{value:"How to Migrate",id:"how-to-migrate",level:3},{value:"App Maintainer",id:"app-maintainer",level:4},{value:"Library Maintainer",id:"library-maintainer",level:4},{value:"Maintainer of TypeScript declarations that depend on <code>@types/react-native</code>",id:"maintainer-of-typescript-declarations-that-depend-on-typesreact-native",level:4},{value:"What if I use Flow?",id:"what-if-i-use-flow",level:3},{value:"What if I find a bug in the TypeScript declaration?",id:"what-if-i-find-a-bug-in-the-typescript-declaration",level:3},{value:"Documentation is TypeScript First",id:"documentation-is-typescript-first",level:2},{value:"Thank you to the React Native TypeScript community!",id:"thank-you-to-the-react-native-typescript-community",level:2}];function l(e){const t=Object.assign({p:"p",ul:"ul",li:"li",a:"a",h2:"h2",pre:"pre",code:"code",img:"img",h3:"h3",h4:"h4",admonition:"admonition"},(0,n.ah)(),e.components);return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.p,{children:"With the release of 0.71, React Native is investing in the TypeScript experience with the following changes:"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsx)(t.li,{children:(0,a.jsx)(t.a,{href:"/blog/2023/01/03/typescript-first#new-app-template-is-typescript-by-default",children:"New app template is TypeScript by default"})}),"\n",(0,a.jsx)(t.li,{children:(0,a.jsx)(t.a,{href:"/blog/2023/01/03/typescript-first#declarations-shipped-with-react-native",children:"TypeScript declarations shipped with React Native"})}),"\n",(0,a.jsx)(t.li,{children:(0,a.jsx)(t.a,{href:"/blog/2023/01/03/typescript-first#documentation-is-typescript-first",children:"React Native documentation is TypeScript First"})}),"\n"]}),"\n",(0,a.jsx)(t.p,{children:"In this post we\u2019ll cover what these changes mean for you as a TypeScript or Flow user."}),"\n",(0,a.jsx)(t.h2,{id:"new-app-template-is-typescript-by-default",children:"New App Template is TypeScript By Default"}),"\n",(0,a.jsx)(t.p,{children:"Starting with 0.71, when you create a new React Native app via the React Native CLI you'll get a TypeScript app by default!"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-shell",children:"npx react-native init My71App --version 0.71.0\n"})}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.img,{alt:"Screenshot of an iPhone simulator running a new app generated by React Native CLI. Alongside the simulator is a screenshot of Visual Studio Code editor opened to &quot;App.tsx&quot; to illustrate it is running a TypeScript file.",src:i(39167).Z+"",width:"3036",height:"1688"})}),"\n",(0,a.jsxs)(t.p,{children:["The starting point of a newly generated app will be ",(0,a.jsx)(t.code,{children:"App.tsx"})," instead of ",(0,a.jsx)(t.code,{children:"App.js"})," \u2013 fully TypeScript typed. The new project is already set up with a ",(0,a.jsx)(t.code,{children:"tsconfig.json"})," so out of the box your IDE will help you write typed code right away!"]}),"\n",(0,a.jsx)(t.h2,{id:"declarations-shipped-with-react-native",children:"Declarations Shipped with React Native"}),"\n",(0,a.jsx)(t.p,{children:"0.71 is the first release with built-in TypeScript (TS) declarations."}),"\n",(0,a.jsxs)(t.p,{children:["Prior, TypeScript declarations for React Native were provided by ",(0,a.jsx)(t.a,{href:"https://www.npmjs.com/package/@types/react-native",children:(0,a.jsx)(t.code,{children:"@types/react-native"})})," hosted in the ",(0,a.jsx)(t.a,{href:"https://github.com/DefinitelyTyped/DefinitelyTyped",children:"DefinitelyTyped"})," repository. The decision to co-locate TypeScript types with React Native source was for improved correctness and maintenance."]}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.code,{children:"@types/react-native"})," only provides types for stable releases. This means if you ever wanted to develop with a pre-release version of React Native in TypeScript, you\u2019d have to use types from an older release which may be inaccurate. Releasing ",(0,a.jsx)(t.code,{children:"@types/react-native"})," is also error-prone. The releases lag React Native releases, and the process involves manually inspecting for type changes made to React Native\u2019s public API and updating the TS declaration to match."]}),"\n",(0,a.jsx)(t.p,{children:"With TS types co-located with React Native source, there is more visibility and ownership of TS types. Our team is actively working on tools to maintain alignment between Flow and TS."}),"\n",(0,a.jsxs)(t.p,{children:["This change also removes a dependency for React Native users to manage. When upgrading to 0.71 or above, you can remove ",(0,a.jsx)(t.code,{children:"@types/react-native"})," as a dependency. ",(0,a.jsx)(t.a,{href:"https://github.com/facebook/react-native/blob/main/template/tsconfig.json",children:"Refer to the new app template on how to set up TypeScript support."})]}),"\n",(0,a.jsxs)(t.p,{children:["We plan to deprecate ",(0,a.jsx)(t.code,{children:"@types/react-native"})," for versions 0.73 and onward. Concretely this means:"]}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.code,{children:"@types/react-native"})," tracking React Native versions 0.71 and 0.72 will be released. They will be identical to the types in React Native on the relevant release branches."]}),"\n",(0,a.jsx)(t.li,{children:"For React Native 0.73 and onward, TS types will only be available from React Native."}),"\n"]}),"\n",(0,a.jsx)(t.h3,{id:"how-to-migrate",children:"How to Migrate"}),"\n",(0,a.jsx)(t.p,{children:"Please migrate to the new co-located types at your earliest convenience. Here are more details on migrating based on your needs."}),"\n",(0,a.jsx)(t.h4,{id:"app-maintainer",children:"App Maintainer"}),"\n",(0,a.jsxs)(t.p,{children:["Once you upgrade to React Native >= 0.71, you can remove the ",(0,a.jsx)(t.code,{children:"@types/react-native"})," from your ",(0,a.jsx)(t.code,{children:"devDependency"}),"."]}),"\n",(0,a.jsx)(t.admonition,{type:"note",children:(0,a.jsxs)(t.p,{children:["If you have warnings because a library you use references ",(0,a.jsx)(t.code,{children:"@types/react-native"})," as a ",(0,a.jsx)(t.code,{children:"peerDependency"}),", file an issue or open a PR for that library to use ",(0,a.jsx)(t.a,{href:"https://docs.npmjs.com/cli/v7/configuring-npm/package-json#peerdependenciesmeta",children:"optional peerDependencies"})," and ignore the warning for now."]})}),"\n",(0,a.jsx)(t.h4,{id:"library-maintainer",children:"Library Maintainer"}),"\n",(0,a.jsxs)(t.p,{children:["Libraries that target versions of React Native below 0.71 may use a ",(0,a.jsx)(t.code,{children:"peerDependency"})," of ",(0,a.jsx)(t.code,{children:"@types/react-native"})," to typecheck against the apps version of typings. This dependency should be marked as optional in ",(0,a.jsx)(t.a,{href:"https://docs.npmjs.com/cli/v7/configuring-npm/package-json#peerdependenciesmeta",children:(0,a.jsx)(t.code,{children:"peerDependenciesMeta"})})," so that the typings are not required for users without TypeScript or for 0.71 users where typings are built-in."]}),"\n",(0,a.jsxs)(t.h4,{id:"maintainer-of-typescript-declarations-that-depend-on-typesreact-native",children:["Maintainer of TypeScript declarations that depend on ",(0,a.jsx)(t.code,{children:"@types/react-native"})]}),"\n",(0,a.jsxs)(t.p,{children:["Check out the ",(0,a.jsx)(t.a,{href:"https://github.com/facebook/react-native/blob/main/CHANGELOG.md",children:"breaking changes introduced with 0.71"})," to see if you\u2019re ready to migrate."]}),"\n",(0,a.jsx)(t.h3,{id:"what-if-i-use-flow",children:"What if I use Flow?"}),"\n",(0,a.jsx)(t.p,{children:"Flow users can continue to typecheck applications targeting 0.71+ but configuration logic for it is no longer included out-of-the box in the template."}),"\n",(0,a.jsxs)(t.p,{children:["Flow users have previously upgraded React Native\u2019s Flow types by merging in the ",(0,a.jsx)(t.code,{children:".flowconfig"})," from the new app template and manually updating ",(0,a.jsx)(t.code,{children:"flow-bin"}),". The new app template no longer has a ",(0,a.jsx)(t.code,{children:".flowconfig"}),", but ",(0,a.jsx)(t.a,{href:"https://github.com/facebook/react-native/blob/main/.flowconfig",children:"one is still present in the React Native repository"})," that can be used as a basis for your app."]}),"\n",(0,a.jsxs)(t.p,{children:["If you need to start a new React Native app in Flow, you can reference the ",(0,a.jsx)(t.a,{href:"https://github.com/facebook/react-native/tree/0.70-stable/template",children:"new app template from 0.70"}),"."]}),"\n",(0,a.jsx)(t.h3,{id:"what-if-i-find-a-bug-in-the-typescript-declaration",children:"What if I find a bug in the TypeScript declaration?"}),"\n",(0,a.jsxs)(t.p,{children:["Regardless of whether you\u2019re using built-in TS types or ",(0,a.jsx)(t.code,{children:"@types/react-native"}),", if you find a bug please submit a PR to both ",(0,a.jsx)(t.a,{href:"https://github.com/facebook/react-native",children:"React Native"})," and ",(0,a.jsx)(t.a,{href:"https://github.com/DefinitelyTyped/DefinitelyTyped",children:"DefinitelyTyped"})," repositories. If you don\u2019t know how to fix it, please file a GitHub issue in the React Native repository and mention ",(0,a.jsx)(t.a,{href:"https://github.com/lunaleaps",children:"@lunaleaps"})," on the issue."]}),"\n",(0,a.jsx)(t.h2,{id:"documentation-is-typescript-first",children:"Documentation is TypeScript First"}),"\n",(0,a.jsx)(t.p,{children:"To ensure a consistent TypeScript experience, we have made several updates to the React Native documentation to reflect TypeScript as the new default language."}),"\n",(0,a.jsx)(t.p,{children:"Code examples now allow inline TypeScript and over 170 interactive code examples have been updated to pass linting, formatting, and type-checking in the new template. Most examples are valid as both TypeScript and JavaScript. Where they are incompatible, you can view the example in either language."}),"\n",(0,a.jsx)(t.p,{children:"If you spot a mistake or you have an improvement, remember that the website is also open source and we would love to see your PRs!"}),"\n",(0,a.jsx)(t.h2,{id:"thank-you-to-the-react-native-typescript-community",children:"Thank you to the React Native TypeScript community!"}),"\n",(0,a.jsx)(t.p,{children:"In closing, we want to recognize all the work done over the years by the community to ensure that TypeScript is usable by React Native developers."}),"\n",(0,a.jsxs)(t.p,{children:["We want to thank all the ",(0,a.jsx)(t.a,{href:"https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/types/react-native/index.d.ts#L3",children:"contributors"})," that have been maintaining ",(0,a.jsx)(t.code,{children:"@types/react-native"})," since ",(0,a.jsx)(t.a,{href:"https://github.com/DefinitelyTyped/DefinitelyTyped/commit/efce0c25ec532a4651859f10eda49e97a5716a42",children:"2015"}),"! We see the effort and care you all have put into making sure React Native users have the best experience."]}),"\n",(0,a.jsxs)(t.p,{children:["Thank you to ",(0,a.jsx)(t.a,{href:"https://github.com/acoates",children:"@acoates"}),", ",(0,a.jsx)(t.a,{href:"https://github.com/eps1lon",children:"@eps1lon"}),", ",(0,a.jsx)(t.a,{href:"https://github.com/kelset",children:"@kelset"}),", ",(0,a.jsx)(t.a,{href:"https://github.com/tido64",children:"@tido64"}),", ",(0,a.jsx)(t.a,{href:"https://github.com/Titozzz",children:"@Titozzz"}),", and ",(0,a.jsx)(t.a,{href:"https://github.com/ZihanChen-MSFT",children:"@ZihanChen-MSFT"})," for your help consulting, questioning, communicating and reviewing changes to move the TypeScript types to React Native."]}),"\n",(0,a.jsxs)(t.p,{children:["Similarly, we want to thank the ",(0,a.jsxs)(t.a,{href:"https://github.com/react-native-community/react-native-template-typescript/graphs/contributors",children:["maintainers of ",(0,a.jsx)(t.code,{children:"react-native-template-typescript"})]})," for supporting the TypeScript experience for new app development in React Native since day one."]}),"\n",(0,a.jsx)(t.p,{children:"We look forward to collaborating more directly in the React Native repository and continue improving the React Native developer experience!"})]})}const h=function(e={}){const{wrapper:t}=Object.assign({},(0,n.ah)(),e.components);return t?(0,a.jsx)(t,Object.assign({},e,{children:(0,a.jsx)(l,e)})):l(e)}},71426:(e,t,i)=>{var a=i(27378),n=Symbol.for("react.element"),r=Symbol.for("react.fragment"),s=Object.prototype.hasOwnProperty,o=a.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,c={key:!0,ref:!0,__self:!0,__source:!0};function p(e,t,i){var a,r={},p=null,l=null;for(a in void 0!==i&&(p=""+i),void 0!==t.key&&(p=""+t.key),void 0!==t.ref&&(l=t.ref),t)s.call(t,a)&&!c.hasOwnProperty(a)&&(r[a]=t[a]);if(e&&e.defaultProps)for(a in t=e.defaultProps)void 0===r[a]&&(r[a]=t[a]);return{$$typeof:n,type:e,key:p,ref:l,props:r,_owner:o.current}}t.Fragment=r,t.jsx=p,t.jsxs=p},24246:(e,t,i)=>{e.exports=i(71426)},39167:(e,t,i)=>{i.d(t,{Z:()=>a});const a=i.p+"assets/images/typescript-first-new-app-426f2230271f337ea5c67af38630f7b1.png"},71670:(e,t,i)=>{i.d(t,{Zo:()=>o,ah:()=>r});var a=i(27378);const n=a.createContext({});function r(e){const t=a.useContext(n);return a.useMemo((()=>"function"==typeof e?e(t):{...t,...e}),[t,e])}const s={};function o({components:e,children:t,disableParentContext:i}){let o;return o=i?"function"==typeof e?e({}):e||s:r(e),a.createElement(n.Provider,{value:o},t)}}}]);