/*! For license information please see 7a693bfc.7b502049.js.LICENSE.txt */
"use strict";(self.webpackChunkreact_native_website=self.webpackChunkreact_native_website||[]).push([[4486],{44021:(e,o,n)=>{n.r(o),n.d(o,{assets:()=>l,contentTitle:()=>i,default:()=>g,frontMatter:()=>a,metadata:()=>r,toc:()=>c});var t=n(24246),s=n(71670);const a={id:"using-a-scrollview",title:"Using a ScrollView"},i=void 0,r={id:"using-a-scrollview",title:"Using a ScrollView",description:"The ScrollView is a generic scrolling container that can contain multiple components and views. The scrollable items can be heterogeneous, and you can scroll both vertically and horizontally (by setting the horizontal property).",source:"@site/versioned_docs/version-0.73/using-a-scrollview.md",sourceDirName:".",slug:"/using-a-scrollview",permalink:"/docs/using-a-scrollview",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/react-native-website/blob/main/website/../docs/using-a-scrollview.md",tags:[],version:"0.73",lastUpdatedAt:1702040446,formattedLastUpdatedAt:"Dec 8, 2023",frontMatter:{id:"using-a-scrollview",title:"Using a ScrollView"},sidebar:"docs",previous:{title:"Handling Text Input",permalink:"/docs/handling-text-input"},next:{title:"Using List Views",permalink:"/docs/using-a-listview"}},l={},c=[];function d(e){const o=Object.assign({p:"p",a:"a",code:"code",div:"div"},(0,s.ah)(),e.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(o.p,{children:["The ",(0,t.jsx)(o.a,{href:"/docs/scrollview",children:"ScrollView"})," is a generic scrolling container that can contain multiple components and views. The scrollable items can be heterogeneous, and you can scroll both vertically and horizontally (by setting the ",(0,t.jsx)(o.code,{children:"horizontal"})," property)."]}),"\n",(0,t.jsxs)(o.p,{children:["This example creates a vertical ",(0,t.jsx)(o.code,{children:"ScrollView"})," with both images and text mixed together."]}),"\n",(0,t.jsx)(o.div,{class:"snack-player","data-snack-name":"Using ScrollView","data-snack-description":"Example usage","data-snack-files":"%7B%22App.tsx%22%3A%7B%22type%22%3A%22CODE%22%2C%22contents%22%3A%22import%20React%20from%20'react'%3B%5Cnimport%20%7BImage%2C%20ScrollView%2C%20Text%7D%20from%20'react-native'%3B%5Cn%5Cnconst%20logo%20%3D%20%7B%5Cn%20%20uri%3A%20'https%3A%2F%2Freactnative.dev%2Fimg%2Ftiny_logo.png'%2C%5Cn%20%20width%3A%2064%2C%5Cn%20%20height%3A%2064%2C%5Cn%7D%3B%5Cn%5Cnconst%20App%20%3D%20()%20%3D%3E%20(%5Cn%20%20%3CScrollView%3E%5Cn%20%20%20%20%3CText%20style%3D%7B%7BfontSize%3A%2096%7D%7D%3EScroll%20me%20plz%3C%2FText%3E%5Cn%20%20%20%20%3CImage%20source%3D%7Blogo%7D%20%2F%3E%5Cn%20%20%20%20%3CImage%20source%3D%7Blogo%7D%20%2F%3E%5Cn%20%20%20%20%3CImage%20source%3D%7Blogo%7D%20%2F%3E%5Cn%20%20%20%20%3CImage%20source%3D%7Blogo%7D%20%2F%3E%5Cn%20%20%20%20%3CImage%20source%3D%7Blogo%7D%20%2F%3E%5Cn%20%20%20%20%3CText%20style%3D%7B%7BfontSize%3A%2096%7D%7D%3EIf%20you%20like%3C%2FText%3E%5Cn%20%20%20%20%3CImage%20source%3D%7Blogo%7D%20%2F%3E%5Cn%20%20%20%20%3CImage%20source%3D%7Blogo%7D%20%2F%3E%5Cn%20%20%20%20%3CImage%20source%3D%7Blogo%7D%20%2F%3E%5Cn%20%20%20%20%3CImage%20source%3D%7Blogo%7D%20%2F%3E%5Cn%20%20%20%20%3CImage%20source%3D%7Blogo%7D%20%2F%3E%5Cn%20%20%20%20%3CText%20style%3D%7B%7BfontSize%3A%2096%7D%7D%3EScrolling%20down%3C%2FText%3E%5Cn%20%20%20%20%3CImage%20source%3D%7Blogo%7D%20%2F%3E%5Cn%20%20%20%20%3CImage%20source%3D%7Blogo%7D%20%2F%3E%5Cn%20%20%20%20%3CImage%20source%3D%7Blogo%7D%20%2F%3E%5Cn%20%20%20%20%3CImage%20source%3D%7Blogo%7D%20%2F%3E%5Cn%20%20%20%20%3CImage%20source%3D%7Blogo%7D%20%2F%3E%5Cn%20%20%20%20%3CText%20style%3D%7B%7BfontSize%3A%2096%7D%7D%3EWhat's%20the%20best%3C%2FText%3E%5Cn%20%20%20%20%3CImage%20source%3D%7Blogo%7D%20%2F%3E%5Cn%20%20%20%20%3CImage%20source%3D%7Blogo%7D%20%2F%3E%5Cn%20%20%20%20%3CImage%20source%3D%7Blogo%7D%20%2F%3E%5Cn%20%20%20%20%3CImage%20source%3D%7Blogo%7D%20%2F%3E%5Cn%20%20%20%20%3CImage%20source%3D%7Blogo%7D%20%2F%3E%5Cn%20%20%20%20%3CText%20style%3D%7B%7BfontSize%3A%2096%7D%7D%3EFramework%20around%3F%3C%2FText%3E%5Cn%20%20%20%20%3CImage%20source%3D%7Blogo%7D%20%2F%3E%5Cn%20%20%20%20%3CImage%20source%3D%7Blogo%7D%20%2F%3E%5Cn%20%20%20%20%3CImage%20source%3D%7Blogo%7D%20%2F%3E%5Cn%20%20%20%20%3CImage%20source%3D%7Blogo%7D%20%2F%3E%5Cn%20%20%20%20%3CImage%20source%3D%7Blogo%7D%20%2F%3E%5Cn%20%20%20%20%3CText%20style%3D%7B%7BfontSize%3A%2080%7D%7D%3EReact%20Native%3C%2FText%3E%5Cn%20%20%3C%2FScrollView%3E%5Cn)%3B%5Cn%5Cnexport%20default%20App%3B%22%7D%7D","data-snack-dependencies":"","data-snack-platform":"web","data-snack-supported-platforms":"ios,android,web","data-snack-theme":"light","data-snack-preview":"true","data-snack-loading":"lazy","data-snack-device-frame":"false"}),"\n",(0,t.jsxs)(o.p,{children:["ScrollViews can be configured to allow paging through views using swiping gestures by using the ",(0,t.jsx)(o.code,{children:"pagingEnabled"})," props. Swiping horizontally between views can also be implemented on Android using the ",(0,t.jsx)(o.a,{href:"https://github.com/react-native-community/react-native-viewpager",children:"ViewPager"})," component."]}),"\n",(0,t.jsxs)(o.p,{children:["On iOS a ScrollView with a single item can be used to allow the user to zoom content. Set up the ",(0,t.jsx)(o.code,{children:"maximumZoomScale"})," and ",(0,t.jsx)(o.code,{children:"minimumZoomScale"})," props and your user will be able to use pinch and expand gestures to zoom in and out."]}),"\n",(0,t.jsxs)(o.p,{children:["The ScrollView works best to present a small number of things of a limited size. All the elements and views of a ",(0,t.jsx)(o.code,{children:"ScrollView"})," are rendered, even if they are not currently shown on the screen. If you have a long list of items which cannot fit on the screen, you should use a ",(0,t.jsx)(o.code,{children:"FlatList"})," instead. So let's ",(0,t.jsx)(o.a,{href:"/docs/using-a-listview",children:"learn about list views"})," next."]})]})}const g=function(e={}){const{wrapper:o}=Object.assign({},(0,s.ah)(),e.components);return o?(0,t.jsx)(o,Object.assign({},e,{children:(0,t.jsx)(d,e)})):d(e)}},71426:(e,o,n)=>{var t=n(27378),s=Symbol.for("react.element"),a=Symbol.for("react.fragment"),i=Object.prototype.hasOwnProperty,r=t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,l={key:!0,ref:!0,__self:!0,__source:!0};function c(e,o,n){var t,a={},c=null,d=null;for(t in void 0!==n&&(c=""+n),void 0!==o.key&&(c=""+o.key),void 0!==o.ref&&(d=o.ref),o)i.call(o,t)&&!l.hasOwnProperty(t)&&(a[t]=o[t]);if(e&&e.defaultProps)for(t in o=e.defaultProps)void 0===a[t]&&(a[t]=o[t]);return{$$typeof:s,type:e,key:c,ref:d,props:a,_owner:r.current}}o.Fragment=a,o.jsx=c,o.jsxs=c},24246:(e,o,n)=>{e.exports=n(71426)},71670:(e,o,n)=>{n.d(o,{Zo:()=>r,ah:()=>a});var t=n(27378);const s=t.createContext({});function a(e){const o=t.useContext(s);return t.useMemo((()=>"function"==typeof e?e(o):{...o,...e}),[o,e])}const i={};function r({components:e,children:o,disableParentContext:n}){let r;return r=n?"function"==typeof e?e({}):e||i:a(e),t.createElement(s.Provider,{value:r},o)}}}]);