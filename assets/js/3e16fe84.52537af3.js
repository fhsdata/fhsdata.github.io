/*! For license information please see 3e16fe84.52537af3.js.LICENSE.txt */
"use strict";(self.webpackChunkreact_native_website=self.webpackChunkreact_native_website||[]).push([[95372],{87776:(t,e,o)=>{o.r(e),o.d(e,{assets:()=>c,contentTitle:()=>i,default:()=>m,frontMatter:()=>a,metadata:()=>s,toc:()=>u});var n=o(24246),r=o(71670);const a={title:"Meet Doctor, a new React Native command",author:"Lucas Bento",authorTitle:"React Native Community",authorURL:"https://twitter.com/lbentosilva",authorImageURL:"https://avatars3.githubusercontent.com/u/6207220?s=460&v=4",authorTwitter:"lbentosilva",tags:["announcement"]},i=void 0,s={permalink:"/blog/2019/11/18/react-native-doctor",source:"@site/blog/2019-11-18-react-native-doctor.md",title:"Meet Doctor, a new React Native command",description:"After over 20 pull requests from 6 contributors in the React Native Community, we're excited to launch react-native doctor, a new command to help you out with getting started, troubleshooting and automatically fixing errors with your development environment. The doctor command is heavily inspired by Expo and Homebrew's own doctor command with a pinch of UI inspired by Jest.",date:"2019-11-18T00:00:00.000Z",formattedDate:"November 18, 2019",tags:[{label:"announcement",permalink:"/blog/tags/announcement"}],readingTime:1.75,hasTruncateMarker:!0,authors:[{name:"Lucas Bento",title:"React Native Community",url:"https://twitter.com/lbentosilva",imageURL:"https://avatars3.githubusercontent.com/u/6207220?s=460&v=4"}],frontMatter:{title:"Meet Doctor, a new React Native command",author:"Lucas Bento",authorTitle:"React Native Community",authorURL:"https://twitter.com/lbentosilva",authorImageURL:"https://avatars3.githubusercontent.com/u/6207220?s=460&v=4",authorTwitter:"lbentosilva",tags:["announcement"]},unlisted:!1,prevItem:{title:"Announcing React Native 0.62 with Flipper",permalink:"/blog/2020/03/26/version-0.62"},nextItem:{title:"Announcing React Native 0.61 with Fast Refresh",permalink:"/blog/2019/09/18/version-0.61"}},c={authorsImageUrls:[void 0]},u=[];function l(t){const e=Object.assign({p:"p",code:"code",a:"a"},(0,r.ah)(),t.components);return(0,n.jsxs)(e.p,{children:["After over 20 pull requests from 6 contributors in the React Native Community, we're excited to launch ",(0,n.jsx)(e.code,{children:"react-native doctor"}),", a new command to help you out with getting started, troubleshooting and automatically fixing errors with your development environment. The ",(0,n.jsx)(e.code,{children:"doctor"})," command is heavily inspired by ",(0,n.jsx)(e.a,{href:"https://expo.io/",children:"Expo"})," and ",(0,n.jsx)(e.a,{href:"https://brew.sh/",children:"Homebrew"}),"'s own doctor command with a pinch of UI inspired by ",(0,n.jsx)(e.a,{href:"https://jestjs.io/",children:"Jest"}),"."]})}const m=function(t={}){const{wrapper:e}=Object.assign({},(0,r.ah)(),t.components);return e?(0,n.jsx)(e,Object.assign({},t,{children:(0,n.jsx)(l,t)})):l(t)}},71426:(t,e,o)=>{var n=o(27378),r=Symbol.for("react.element"),a=Symbol.for("react.fragment"),i=Object.prototype.hasOwnProperty,s=n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,c={key:!0,ref:!0,__self:!0,__source:!0};function u(t,e,o){var n,a={},u=null,l=null;for(n in void 0!==o&&(u=""+o),void 0!==e.key&&(u=""+e.key),void 0!==e.ref&&(l=e.ref),e)i.call(e,n)&&!c.hasOwnProperty(n)&&(a[n]=e[n]);if(t&&t.defaultProps)for(n in e=t.defaultProps)void 0===a[n]&&(a[n]=e[n]);return{$$typeof:r,type:t,key:u,ref:l,props:a,_owner:s.current}}e.Fragment=a,e.jsx=u,e.jsxs=u},24246:(t,e,o)=>{t.exports=o(71426)},71670:(t,e,o)=>{o.d(e,{Zo:()=>s,ah:()=>a});var n=o(27378);const r=n.createContext({});function a(t){const e=n.useContext(r);return n.useMemo((()=>"function"==typeof t?t(e):{...e,...t}),[e,t])}const i={};function s({components:t,children:e,disableParentContext:o}){let s;return s=o?"function"==typeof t?t({}):t||i:a(t),n.createElement(r.Provider,{value:s},e)}}}]);