/*! For license information please see 1751ce21.f3ee8146.js.LICENSE.txt */
"use strict";(self.webpackChunkreact_native_website=self.webpackChunkreact_native_website||[]).push([[39499],{51099:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>u,frontMatter:()=>s,metadata:()=>i,toc:()=>d});var o=a(24246),t=a(71670);const s={id:"sourcemaps",title:"Source Maps"},r=void 0,i={id:"sourcemaps",title:"Source Maps",description:"Source maps allow you to map a transformed file back to the original source file. The main purpose of source maps is to aid debugging and help with investigating issues from release builds.",source:"@site/versioned_docs/version-0.72/sourcemaps.md",sourceDirName:".",slug:"/sourcemaps",permalink:"/docs/0.72/sourcemaps",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/react-native-website/blob/main/website/../docs/sourcemaps.md",tags:[],version:"0.72",lastUpdatedAt:1687362382,formattedLastUpdatedAt:"Jun 21, 2023",frontMatter:{id:"sourcemaps",title:"Source Maps"},sidebar:"docs",previous:{title:"Symbolicating a stack trace",permalink:"/docs/0.72/symbolication"},next:{title:"Using Libraries",permalink:"/docs/0.72/libraries"}},l={},d=[{value:"Enable source maps on Android",id:"enable-source-maps-on-android",level:2},{value:"Hermes",id:"hermes",level:3},{value:"Enable source maps on iOS",id:"enable-source-maps-on-ios",level:2},{value:"Manual Symbolication",id:"manual-symbolication",level:2}];function c(e){const n=Object.assign({p:"p",pre:"pre",code:"code",h2:"h2",h3:"h3",admonition:"admonition",a:"a"},(0,t.ah)(),e.components);return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.p,{children:"Source maps allow you to map a transformed file back to the original source file. The main purpose of source maps is to aid debugging and help with investigating issues from release builds."}),"\n",(0,o.jsx)(n.p,{children:"Without the source maps, when running into an error in the release build you will see a stacktrace like:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-text",children:"TypeError: Cannot read property 'data' of undefined\n  at anonymous(app:///index.android.bundle:1:4277021)\n  at call(native)\n  at p(app:///index.android.bundle:1:227785)\n"})}),"\n",(0,o.jsx)(n.p,{children:"With source maps generated, a stacktrace will include path, file name, and line number of the original source file:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-text",children:"TypeError: Cannot read property 'data' of undefined\n  at anonymous(src/modules/notifications/Permission.js:15:requestNotificationPermission)\n  at call(native)\n  at p(node_modules/regenerator-runtime/runtime.js:64:Generator)\n"})}),"\n",(0,o.jsx)(n.p,{children:"This allows you to triage release issues using a decipherable stacktrace."}),"\n",(0,o.jsx)(n.p,{children:"Follow the instructions below to get started with source maps."}),"\n",(0,o.jsx)(n.h2,{id:"enable-source-maps-on-android",children:"Enable source maps on Android"}),"\n",(0,o.jsx)(n.h3,{id:"hermes",children:"Hermes"}),"\n",(0,o.jsx)(n.admonition,{type:"info",children:(0,o.jsxs)(n.p,{children:["Source maps are built in Release mode by default, unless ",(0,o.jsx)(n.code,{children:"hermesFlagsRelease"})," is set. In that case source maps will have to be enabled."]})}),"\n",(0,o.jsxs)(n.p,{children:["To do so, ensure the following is set in your app's ",(0,o.jsx)(n.code,{children:"android/app/build.gradle"})," file."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-groovy",children:'project.ext.react = [\n    enableHermes: true,\n    hermesFlagsRelease: ["-O", "-output-source-map"], // plus whichever flag was required to set this away from default\n]\n'})}),"\n",(0,o.jsx)(n.p,{children:"If done correctly you should see the output location of the source map during Metro build output."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-text",children:"Writing bundle output to:, android/app/build/generated/assets/react/release/index.android.bundle\nWriting sourcemap output to:, android/app/build/intermediates/sourcemaps/react/release/index.android.bundle.packager.map\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Development builds do not produce a bundle and thus already have symbols, but if the development build is bundled you may use ",(0,o.jsx)(n.code,{children:"hermesFlagsDebug"})," like above to enable source maps."]}),"\n",(0,o.jsx)(n.h2,{id:"enable-source-maps-on-ios",children:"Enable source maps on iOS"}),"\n",(0,o.jsxs)(n.p,{children:["Source maps are disabled by default. To enable them one has to define a ",(0,o.jsx)(n.code,{children:"SOURCEMAP_FILE"})," environment variable."]}),"\n",(0,o.jsx)(n.p,{children:'In order to do so, within Xcode head to the Build Phase - "Bundle React Native code and images".'}),"\n",(0,o.jsxs)(n.p,{children:["At the top of the file near the other exports, add an entry for ",(0,o.jsx)(n.code,{children:"SOURCEMAP_FILE"})," to the preferred location and name. Like below:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:'export SOURCEMAP_FILE="$(pwd)/../main.jsbundle.map";\n\nexport NODE_BINARY=node\n../node_modules/react-native/scripts/react-native-xcode.sh\n'})}),"\n",(0,o.jsx)(n.p,{children:"If done correctly you should see the output location of the source map during Metro build output."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-text",children:"Writing bundle output to:, Build/Intermediates.noindex/ArchiveIntermediates/application/BuildProductsPath/Release-iphoneos/main.jsbundle\nWriting sourcemap output to:, Build/Intermediates.noindex/ArchiveIntermediates/application/BuildProductsPath/Release-iphoneos/main.jsbundle.map\n"})}),"\n",(0,o.jsx)(n.h2,{id:"manual-symbolication",children:"Manual Symbolication"}),"\n",(0,o.jsx)(n.admonition,{type:"info",children:(0,o.jsxs)(n.p,{children:["You may read about manual symbolication of a stack trace on the ",(0,o.jsx)(n.a,{href:"/docs/0.72/symbolication",children:"symbolication"})," page."]})})]})}const u=function(e={}){const{wrapper:n}=Object.assign({},(0,t.ah)(),e.components);return n?(0,o.jsx)(n,Object.assign({},e,{children:(0,o.jsx)(c,e)})):c(e)}},71426:(e,n,a)=>{var o=a(27378),t=Symbol.for("react.element"),s=Symbol.for("react.fragment"),r=Object.prototype.hasOwnProperty,i=o.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,l={key:!0,ref:!0,__self:!0,__source:!0};function d(e,n,a){var o,s={},d=null,c=null;for(o in void 0!==a&&(d=""+a),void 0!==n.key&&(d=""+n.key),void 0!==n.ref&&(c=n.ref),n)r.call(n,o)&&!l.hasOwnProperty(o)&&(s[o]=n[o]);if(e&&e.defaultProps)for(o in n=e.defaultProps)void 0===s[o]&&(s[o]=n[o]);return{$$typeof:t,type:e,key:d,ref:c,props:s,_owner:i.current}}n.Fragment=s,n.jsx=d,n.jsxs=d},24246:(e,n,a)=>{e.exports=a(71426)},71670:(e,n,a)=>{a.d(n,{Zo:()=>i,ah:()=>s});var o=a(27378);const t=o.createContext({});function s(e){const n=o.useContext(t);return o.useMemo((()=>"function"==typeof e?e(n):{...n,...e}),[n,e])}const r={};function i({components:e,children:n,disableParentContext:a}){let i;return i=a?"function"==typeof e?e({}):e||r:s(e),o.createElement(t.Provider,{value:i},n)}}}]);