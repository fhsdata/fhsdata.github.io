/*! For license information please see 4621a316.3d5def38.js.LICENSE.txt */
"use strict";(self.webpackChunkreact_native_website=self.webpackChunkreact_native_website||[]).push([[28996],{38689:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var r=n(24246),a=n(71670);const i={title:"Pointer Events in React Native",authors:["lunaleaps","vincentriemer"],tags:["announcement"],date:new Date("2022-12-13T00:00:00.000Z")},o="Pointer Events in React Native",s={permalink:"/blog/2022/12/13/pointer-events-in-react-native",source:"@site/blog/2022-12-13-pointer-events-in-react-native.md",title:"Pointer Events in React Native",description:"Today we are sharing an experimental cross-platform pointer API for React Native. We\u2019ll go over motivations, how it works, and its benefits to React Native users. There are instructions on how to enable and we\u2019re excited to hear your feedback!",date:"2022-12-13T00:00:00.000Z",formattedDate:"December 13, 2022",tags:[{label:"announcement",permalink:"/blog/tags/announcement"}],readingTime:9.035,hasTruncateMarker:!0,authors:[{name:"Luna Wei",title:"Software Engineer at Meta",url:"https://twitter.com/lunaleaps",imageURL:"https://github.com/lunaleaps.png",key:"lunaleaps"},{name:"Vincent Riemer",title:"Software Engineer at Meta",url:"https://twitter.com/vincentriemer",imageURL:"https://github.com/vincentriemer.png",key:"vincentriemer"}],frontMatter:{title:"Pointer Events in React Native",authors:["lunaleaps","vincentriemer"],tags:["announcement"],date:"2022-12-13T00:00:00.000Z"},unlisted:!1,prevItem:{title:"First-class Support for TypeScript",permalink:"/blog/2023/01/03/typescript-first"},nextItem:{title:"React Native Core Contributor Summit 2022",permalink:"/blog/2022/11/22/react-native-core-contributor-summit-2022"}},c={authorsImageUrls:[void 0,void 0]},l=[];function u(e){const t=Object.assign({p:"p",a:"a"},(0,a.ah)(),e.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.p,{children:"Today we are sharing an experimental cross-platform pointer API for React Native. We\u2019ll go over motivations, how it works, and its benefits to React Native users. There are instructions on how to enable and we\u2019re excited to hear your feedback!"}),"\n",(0,r.jsxs)(t.p,{children:["It\u2019s been over a year since we shared ",(0,r.jsx)(t.a,{href:"https://reactnative.dev/blog/2021/08/26/many-platform-vision",children:"our many platform vision"})," on the wins of building beyond mobile and how it sets a higher bar for all platforms. During this time, we've increased our investments in React Native for VR, Desktop, and Web. With differences in hardware and interactions on these platforms, it raised the question of how React Native should holistically handle input."]})]})}const p=function(e={}){const{wrapper:t}=Object.assign({},(0,a.ah)(),e.components);return t?(0,r.jsx)(t,Object.assign({},e,{children:(0,r.jsx)(u,e)})):u(e)}},71426:(e,t,n)=>{var r=n(27378),a=Symbol.for("react.element"),i=Symbol.for("react.fragment"),o=Object.prototype.hasOwnProperty,s=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,c={key:!0,ref:!0,__self:!0,__source:!0};function l(e,t,n){var r,i={},l=null,u=null;for(r in void 0!==n&&(l=""+n),void 0!==t.key&&(l=""+t.key),void 0!==t.ref&&(u=t.ref),t)o.call(t,r)&&!c.hasOwnProperty(r)&&(i[r]=t[r]);if(e&&e.defaultProps)for(r in t=e.defaultProps)void 0===i[r]&&(i[r]=t[r]);return{$$typeof:a,type:e,key:l,ref:u,props:i,_owner:s.current}}t.Fragment=i,t.jsx=l,t.jsxs=l},24246:(e,t,n)=>{e.exports=n(71426)},71670:(e,t,n)=>{n.d(t,{Zo:()=>s,ah:()=>i});var r=n(27378);const a=r.createContext({});function i(e){const t=r.useContext(a);return r.useMemo((()=>"function"==typeof e?e(t):{...t,...e}),[t,e])}const o={};function s({components:e,children:t,disableParentContext:n}){let s;return s=n?"function"==typeof e?e({}):e||o:i(e),r.createElement(a.Provider,{value:s},t)}}}]);