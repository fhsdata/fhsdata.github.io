/*! For license information please see 7ecf3e9e.f38f552a.js.LICENSE.txt */
"use strict";(self.webpackChunkreact_native_website=self.webpackChunkreact_native_website||[]).push([[13442],{7861:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>s,default:()=>b,frontMatter:()=>o,metadata:()=>a,toc:()=>c});var i=n(24246),r=n(71670);const o={title:"Contribution License Agreement"},s=void 0,a={id:"contribution-license-agreement",title:"Contribution License Agreement",description:"You must sign a Contribution License Agreement (CLA) before your pull request can be merged. This a one-time requirement for Meta projects in GitHub. You can read more about Contributor License Agreements (CLA) on Wikipedia.",source:"@site/contributing/contribution-license-agreement.md",sourceDirName:".",slug:"/contribution-license-agreement",permalink:"/contributing/contribution-license-agreement",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/react-native-website/blob/main/website/contributing/contribution-license-agreement.md",tags:[],version:"current",lastUpdatedAt:1655801704,formattedLastUpdatedAt:"Jun 21, 2022",frontMatter:{title:"Contribution License Agreement"},sidebar:"contributing",previous:{title:"How to File an Issue",permalink:"/contributing/how-to-file-an-issue"},next:{title:"Triaging GitHub Issues",permalink:"/contributing/triaging-github-issues"}},u={},c=[];function l(e){const t=Object.assign({p:"p",a:"a"},(0,r.ah)(),e.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(t.p,{children:["You must sign a Contribution License Agreement (CLA) before your pull request can be merged. This a one-time requirement for Meta projects in GitHub. You can read more about ",(0,i.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Contributor_License_Agreement",children:"Contributor License Agreements (CLA)"})," on Wikipedia."]}),"\n",(0,i.jsx)(t.p,{children:"However, you don't have to do this up-front. We welcome you to follow, fork, and submit a pull request."}),"\n",(0,i.jsxs)(t.p,{children:["When your pull request is created, it is classified by the Facebook GitHub bot. If you have not signed a CLA, the bot will provide instructions for ",(0,i.jsx)(t.a,{href:"https://code.facebook.com/cla",children:"signing a CLA"}),' before your pull request can be considered eligible for merging. Once you have done so, the current and all future pull requests will be labelled as "CLA Signed".']}),"\n",(0,i.jsx)(t.p,{children:"Signing the CLA might sound scary, but it's actually very simple and can be done in less than a minute."})]})}const b=function(e={}){const{wrapper:t}=Object.assign({},(0,r.ah)(),e.components);return t?(0,i.jsx)(t,Object.assign({},e,{children:(0,i.jsx)(l,e)})):l(e)}},71426:(e,t,n)=>{var i=n(27378),r=Symbol.for("react.element"),o=Symbol.for("react.fragment"),s=Object.prototype.hasOwnProperty,a=i.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,u={key:!0,ref:!0,__self:!0,__source:!0};function c(e,t,n){var i,o={},c=null,l=null;for(i in void 0!==n&&(c=""+n),void 0!==t.key&&(c=""+t.key),void 0!==t.ref&&(l=t.ref),t)s.call(t,i)&&!u.hasOwnProperty(i)&&(o[i]=t[i]);if(e&&e.defaultProps)for(i in t=e.defaultProps)void 0===o[i]&&(o[i]=t[i]);return{$$typeof:r,type:e,key:c,ref:l,props:o,_owner:a.current}}t.Fragment=o,t.jsx=c,t.jsxs=c},24246:(e,t,n)=>{e.exports=n(71426)},71670:(e,t,n)=>{n.d(t,{Zo:()=>a,ah:()=>o});var i=n(27378);const r=i.createContext({});function o(e){const t=i.useContext(r);return i.useMemo((()=>"function"==typeof e?e(t):{...t,...e}),[t,e])}const s={};function a({components:e,children:t,disableParentContext:n}){let a;return a=n?"function"==typeof e?e({}):e||s:o(e),i.createElement(r.Provider,{value:a},t)}}}]);