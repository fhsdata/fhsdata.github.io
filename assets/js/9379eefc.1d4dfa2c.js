/*! For license information please see 9379eefc.1d4dfa2c.js.LICENSE.txt */
"use strict";(self.webpackChunkreact_native_website=self.webpackChunkreact_native_website||[]).push([[92160],{51831:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>s,toc:()=>c});var n=a(24246),i=a(71670);const r={title:"React Native's Many Platform Vision",authors:["abernathyca","Eli_White","lunaleaps","yungsters"],tags:["announcement"]},o=void 0,s={permalink:"/blog/2021/08/26/many-platform-vision",source:"@site/blog/2021-08-26-many-platform-vision.md",title:"React Native's Many Platform Vision",description:"React Native has been very successful at raising the bar for mobile development, both at Facebook and elsewhere in the industry. As we interact with computers in new ways and as new devices are invented, we want React Native to be there for everyone. Although React Native was originally created to build mobile apps, we believe that focusing on many platforms and building to each platform\u2019s strengths and constraints has a symbiotic effect. We have seen huge benefits when we extended this technology to desktop and virtual reality, and we're excited to share what this means for the future of React Native.",date:"2021-08-26T00:00:00.000Z",formattedDate:"August 26, 2021",tags:[{label:"announcement",permalink:"/blog/tags/announcement"}],readingTime:7.875,hasTruncateMarker:!0,authors:[{name:"Christine Abernathy",title:"Developer Advocate at Meta",url:"https://twitter.com/abernathyca",imageURL:"https://github.com/caabernathy.png",key:"abernathyca"},{name:"Eli White",title:"Engineering Manager at Meta",url:"https://twitter.com/Eli_White",imageURL:"https://github.com/TheSavior.png",key:"Eli_White"},{name:"Luna Wei",title:"Software Engineer at Meta",url:"https://twitter.com/lunaleaps",imageURL:"https://github.com/lunaleaps.png",key:"lunaleaps"},{name:"Timothy Yung",title:"Software Engineer at Meta",url:"https://twitter.com/yungsters",imageURL:"https://github.com/yungsters.png",key:"yungsters"}],frontMatter:{title:"React Native's Many Platform Vision",authors:["abernathyca","Eli_White","lunaleaps","yungsters"],tags:["announcement"]},unlisted:!1,prevItem:{title:"React Native Is Hiring Managers, To Expand Beyond Mobile",permalink:"/blog/2021/08/30/react-native-is-hiring-managers"},nextItem:{title:"React Native in H2 2021",permalink:"/blog/2021/08/19/h2-2021"}},l={authorsImageUrls:[void 0,void 0,void 0,void 0]},c=[];function h(e){const t=Object.assign({p:"p"},(0,i.ah)(),e.components);return(0,n.jsx)(t.p,{children:"React Native has been very successful at raising the bar for mobile development, both at Facebook and elsewhere in the industry. As we interact with computers in new ways and as new devices are invented, we want React Native to be there for everyone. Although React Native was originally created to build mobile apps, we believe that focusing on many platforms and building to each platform\u2019s strengths and constraints has a symbiotic effect. We have seen huge benefits when we extended this technology to desktop and virtual reality, and we're excited to share what this means for the future of React Native."})}const u=function(e={}){const{wrapper:t}=Object.assign({},(0,i.ah)(),e.components);return t?(0,n.jsx)(t,Object.assign({},e,{children:(0,n.jsx)(h,e)})):h(e)}},71426:(e,t,a)=>{var n=a(27378),i=Symbol.for("react.element"),r=Symbol.for("react.fragment"),o=Object.prototype.hasOwnProperty,s=n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,l={key:!0,ref:!0,__self:!0,__source:!0};function c(e,t,a){var n,r={},c=null,h=null;for(n in void 0!==a&&(c=""+a),void 0!==t.key&&(c=""+t.key),void 0!==t.ref&&(h=t.ref),t)o.call(t,n)&&!l.hasOwnProperty(n)&&(r[n]=t[n]);if(e&&e.defaultProps)for(n in t=e.defaultProps)void 0===r[n]&&(r[n]=t[n]);return{$$typeof:i,type:e,key:c,ref:h,props:r,_owner:s.current}}t.Fragment=r,t.jsx=c,t.jsxs=c},24246:(e,t,a)=>{e.exports=a(71426)},71670:(e,t,a)=>{a.d(t,{Zo:()=>s,ah:()=>r});var n=a(27378);const i=n.createContext({});function r(e){const t=n.useContext(i);return n.useMemo((()=>"function"==typeof e?e(t):{...t,...e}),[t,e])}const o={};function s({components:e,children:t,disableParentContext:a}){let s;return s=a?"function"==typeof e?e({}):e||o:r(e),n.createElement(i.Provider,{value:s},t)}}}]);